{"ast":null,"code":"var _jsxFileName = \"/Users/grantwatson/Desktop/Development/ReactJS/Watsyn-Jarvis/src/components/Message/Message.js\";\nimport React, { Component } from 'react';\nimport fire from '../Firebase/fire';\nimport { Table } from 'reactstrap';\n\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n\n    this.messageDataEntry = () => {\n      fire.database().ref('messages').set(this.state);\n      console.log('DATA SAVED');\n    };\n\n    this.retrieveMessageData = () => {\n      let ref = fire.database().ref('messages');\n      ref.on('value', snapshot => {\n        const state = snapshot.val();\n        this.setState(state);\n      });\n      console.log('DATA RETRIEVED');\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let title = this.refs.title.value;\n      let note = this.refs.note.value;\n      let uid = this.refs.uid.value;\n\n      if (uid && title && note) {\n        const messages = this.state.messages;\n        const mesIndex = messages.findIndex(data => {\n          return data.uid === uid;\n        });\n        messages[mesIndex].title = title;\n        messages[mesIndex].note = note;\n        this.setState({\n          messages\n        });\n      } else if (title && note) {\n        const uid = new Date().getTime().toString();\n        const messages = this.state.messages;\n        messages.push({\n          uid,\n          title,\n          note\n        });\n        this.setState({\n          messages\n        });\n      }\n\n      this.refs.title.value = '';\n      this.refs.note.value = '';\n      this.refs.uid.value = '';\n    };\n\n    this.removeData = message => {\n      const messages = this.state.messages;\n      const newState = messages.filter(data => {\n        return data.uid !== message.uid;\n      });\n      this.setState({\n        messages: newState\n      });\n    };\n\n    this.updateData = message => {\n      this.refs.uid.value = message.uid;\n      this.refs.title.value = message.title;\n      this.refs.note.value = message.note;\n    };\n\n    this.state = {\n      messages: []\n    }; // <- set up react state\n  }\n\n  componentWillMount() {\n    /* Create reference to messages in Firebase Database */\n    let messagesRef = fire.database().ref('messages').orderByKey().limitToLast(1000);\n    messagesRef.on('child_added', snapshot => {\n      /* Update React state when message is added at Firebase Database */\n      let message = {\n        text: snapshot.val(),\n        id: snapshot.key\n      };\n      this.setState({\n        messages: [message].concat(this.state.messages)\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.retrieveMessageData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // check on previous state\n    // only write when it's different with the new state\n    if (prevState !== this.state) {\n      this.messageDataEntry();\n    }\n  }\n\n  addMessage(e) {\n    e.preventDefault(); // <- prevent form submit from reloading the page\n\n    /* Send the message to Firebase */\n\n    fire.database().ref('messages').push(this.inputMessage.value);\n    this.inputMessage.value = ''; // <- clear the input\n  }\n\n  render() {\n    const messages = this.state.messages;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"bgf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Add A New Note\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, messages.map(developer => React.createElement(\"div\", {\n      key: messages.uid,\n      className: \"card float-left\",\n      style: {\n        width: '18rem',\n        marginRight: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, messages.title), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, messages.message), React.createElement(\"button\", {\n      onClick: () => this.removeData(messages),\n      className: \"btn btn-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      onClick: () => this.updateData(messages),\n      className: \"btn btn-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Edit\")))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xl-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Add new new note here\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"hidden\",\n      ref: \"uid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"title\",\n      className: \"form-control\",\n      placeholder: \"Enter Title of Notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Note\"), React.createElement(\"textarea\", {\n      rows: \"4\",\n      cols: \"120\",\n      ref: \"note\",\n      className: \"form-control\",\n      placeholder: \"Enter Note Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nexport default Message;","map":{"version":3,"sources":["/Users/grantwatson/Desktop/Development/ReactJS/Watsyn-Jarvis/src/components/Message/Message.js"],"names":["React","Component","fire","Table","Message","constructor","props","messageDataEntry","database","ref","set","state","console","log","retrieveMessageData","on","snapshot","val","setState","handleSubmit","event","preventDefault","title","refs","value","note","uid","messages","mesIndex","findIndex","data","Date","getTime","toString","push","removeData","message","newState","filter","updateData","componentWillMount","messagesRef","orderByKey","limitToLast","text","id","key","concat","componentDidMount","componentDidUpdate","prevProps","prevState","addMessage","e","inputMessage","render","map","developer","width","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport fire from '../Firebase/fire';\nimport { Table } from 'reactstrap';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { messages: [] }; // <- set up react state\n    }\n    componentWillMount() {\n        /* Create reference to messages in Firebase Database */\n        let messagesRef = fire.database().ref('messages').orderByKey().limitToLast(1000);\n        messagesRef.on('child_added', snapshot => {\n            /* Update React state when message is added at Firebase Database */\n            let message = { text: snapshot.val(), id: snapshot.key };\n            this.setState({ messages: [message].concat(this.state.messages) });\n\n\n        })\n    }\n\n    componentDidMount() {\n        this.retrieveMessageData();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // check on previous state\n        // only write when it's different with the new state\n        if (prevState !== this.state) {\n            this.messageDataEntry();\n        }\n    }\n\n    messageDataEntry = () => {\n        fire.database().ref('messages').set(this.state);\n        console.log('DATA SAVED');\n    }\n\n    retrieveMessageData = () => {\n        let ref = fire.database().ref('messages');\n        ref.on('value', snapshot => {\n            const state = snapshot.val();\n            this.setState(state);\n        });\n        console.log('DATA RETRIEVED');\n    }\n\n    addMessage(e) {\n        e.preventDefault(); // <- prevent form submit from reloading the page\n        /* Send the message to Firebase */\n        fire.database().ref('messages').push(this.inputMessage.value);\n        this.inputMessage.value = ''; // <- clear the input\n    }\n\n    render() {\n        const { messages } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className='col-xl-12'>\n                        <center><h1 className=\"bgf\">Add A New Note</h1></center>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        {\n                            messages\n                                .map(developer =>\n                                    <div key={messages.uid} className=\"card float-left\" style={{ width: '18rem', marginRight: '1rem' }}>\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{messages.title}</h5>\n                                            <p className=\"card-text\">{messages.message}</p>\n                                            <button onClick={() => this.removeData(messages)} className=\"btn btn-link\">Delete</button>\n                                            <button onClick={() => this.updateData(messages)} className=\"btn btn-link\">Edit</button>\n                                        </div>\n                                    </div>\n                                )\n                        }\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-xl-12'>\n                        <h1>Add new new note here</h1>\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-row\">\n                                <input type='hidden' ref='uid' />\n                                <div className=\"form-group col-md-6\">\n                                    <label>Title</label>\n                                    <input type=\"text\" ref='title' className=\"form-control\" placeholder=\"Enter Title of Notes\" />\n                                </div>\n                                <div className=\"form-group col-md-6\">\n                                    <label>Note</label>\n                                    <textarea rows=\"4\" cols=\"120\" ref='note' className=\"form-control\" placeholder=\"Enter Note Here\" />\n                                </div>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let title = this.refs.title.value;\n        let note = this.refs.note.value;\n        let uid = this.refs.uid.value;\n\n        if (uid && title && note) {\n            const { messages } = this.state;\n            const mesIndex = messages.findIndex(data => {\n                return data.uid === uid\n            });\n            messages[mesIndex].title = title;\n            messages[mesIndex].note = note;\n            this.setState({ messages });\n        }\n        else if (title && note) {\n            const uid = new Date().getTime().toString();\n            const { messages } = this.state;\n            messages.push({ uid, title, note })\n            this.setState({ messages });\n        }\n\n        this.refs.title.value = '';\n        this.refs.note.value = '';\n        this.refs.uid.value = '';\n    }\n\n    removeData = (message) => {\n        const { messages } = this.state;\n        const newState = messages.filter(data => {\n            return data.uid !== message.uid;\n        });\n        this.setState({ messages: newState });\n    }\n\n    updateData = (message) => {\n        this.refs.uid.value = message.uid;\n        this.refs.title.value = message.title;\n        this.refs.note.value = message.note;\n    }\n}\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}