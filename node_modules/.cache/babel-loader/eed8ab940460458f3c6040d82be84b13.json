{"ast":null,"code":"var _jsxFileName = \"/Users/grantwatson/Desktop/Development/ReactJS/Watsyn-Jarvis/src/components/ClientData/clientForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport fire from '../Firebase/fire';\n\nclass ClientForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this._handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this._saveClient = (key, title, index, e) => {\n      if (this.state.clientID === \"\" || this.state.businessName === \"\" || this.state.businessEmail === \"\" || this.state.businessNumber === \"\" || this.state.contactName === \"\" || this.state.contactEmail === \"\" || this.state.contactNumber === \"\") {\n        alert(\"Client information cannot be empty\");\n      } else {\n        const newClientKey = fire.database().ref(\"clients/\").push().key;\n        fire.database().ref(\"clients/\").update({\n          [newClientKey]: {\n            listKey: key.key,\n            businessName: title.title\n          }\n        });\n        this.setState({\n          businessName: \"\",\n          businessEmail: \"\",\n          businessNumber: \"\",\n          contactName: \"\",\n          contactEmail: \"\",\n          contactNumber: \"\"\n        });\n      }\n    };\n\n    this._handleDeleteClient = key => {\n      fire.database().ref(`cards/${key}`).remove();\n      console.log(\"Successfully deleted Client\");\n      const myClientLength = this.state.dataClient.length; // console.log(myCardLength)\n\n      if (myClientLength === 1) {\n        this.setState({\n          dataClient: []\n        });\n      }\n    };\n\n    this.toggle = e => {\n      this.setState(prevState => ({\n        editing: !prevState.editing\n      }));\n    };\n\n    this.state = {\n      client: \"\",\n      businessName: \"\",\n      businessEmail: \"\",\n      businessNumber: \"\",\n      contactName: \"\",\n      contactEmail: \"\",\n      contactNumber: \"\",\n      dataClient: [],\n      clientList: []\n    };\n  }\n\n  componentDidMount() {\n    const clientEntry = fire.database().ref(\"client/\");\n    clientEntry.on(\"value\", snapshot => {\n      const clientEntryFromDatabase = snapshot.val();\n\n      if (clientEntryFromDatabase === null) {\n        console.log(\"Client at our firebase is null\");\n      } else {\n        const clients = Object.keys(snapshot.val()).map(key => {\n          return {\n            key: key,\n            businessName: clientEntryFromDatabase[key].businessName,\n            businessEmail: clientEntryFromDatabase[key].businessEmail,\n            businessNumber: clientEntryFromDatabase[key].businessNumber,\n            contactName: clientEntryFromDatabase[key].contactName,\n            contactEmail: clientEntryFromDatabase[key].contactEmail,\n            contactNumber: clientEntryFromDatabase[key].contactNumber,\n            listKey: clientEntryFromDatabase[key].listKey\n          };\n        });\n        this.setState({\n          dataClient: clients\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      for: \"businessName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Business Name:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"businessName\",\n      placeholder: \"Add Name of Business\",\n      value: this.state.businessName,\n      onChange: this.state._handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      for: \"businessEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Business Email:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"businessEmail\",\n      placeholder: \"Enter Business email\",\n      value: this.state.businessEmail,\n      onChange: this.state._handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      for: \"businessNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Business Phone:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"businessNumber\",\n      placeholder: \"Enter Business Phone #\",\n      value: this.state.businessNumber,\n      onChange: this.state._handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      for: \"contactName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Contact Name:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"businessName\",\n      placeholder: \"Add Name of Contact\",\n      value: this.state.contactName,\n      onChange: this.state._handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      for: \"contactEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Contact Email:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"contactEmail\",\n      placeholder: \"Enter contact person email\",\n      value: this.state.contactEmail,\n      onChange: this.state._handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      for: \"contactNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Contact Phone:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"contactNumber\",\n      placeholder: \"Enter Contact Person's Phone #\",\n      value: this.state.contactNumber,\n      onChange: this.state._handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: () => this._saveClient(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}\n\nexport default ClientForm;","map":{"version":3,"sources":["/Users/grantwatson/Desktop/Development/ReactJS/Watsyn-Jarvis/src/components/ClientData/clientForm.js"],"names":["React","Component","Button","Form","FormGroup","Input","fire","ClientForm","constructor","props","_handleChange","e","setState","target","name","value","_saveClient","key","title","index","state","clientID","businessName","businessEmail","businessNumber","contactName","contactEmail","contactNumber","alert","newClientKey","database","ref","push","update","listKey","_handleDeleteClient","remove","console","log","myClientLength","dataClient","length","toggle","prevState","editing","client","clientList","componentDidMount","clientEntry","on","snapshot","clientEntryFromDatabase","val","clients","Object","keys","map","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport fire from '../Firebase/fire';\n\nclass ClientForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            client: \"\",\n            businessName: \"\",\n            businessEmail: \"\",\n            businessNumber: \"\",\n            contactName: \"\",\n            contactEmail: \"\",\n            contactNumber: \"\",\n            dataClient: [],\n            clientList: []\n        };\n    }\n    componentDidMount() {\n        const clientEntry = fire.database().ref(\"client/\");\n        clientEntry.on(\"value\", snapshot => {\n            const clientEntryFromDatabase = snapshot.val();\n            if (clientEntryFromDatabase === null) {\n                console.log(\"Client at our firebase is null\");\n            } else {\n                const clients = Object.keys(snapshot.val()).map(key => {\n                    return {\n                        key: key,\n                        businessName: clientEntryFromDatabase[key].businessName,\n                        businessEmail: clientEntryFromDatabase[key].businessEmail,\n                        businessNumber: clientEntryFromDatabase[key].businessNumber,\n                        contactName: clientEntryFromDatabase[key].contactName,\n                        contactEmail: clientEntryFromDatabase[key].contactEmail,\n                        contactNumber: clientEntryFromDatabase[key].contactNumber,\n                        listKey: clientEntryFromDatabase[key].listKey\n                    };\n                });\n                this.setState({\n                    dataClient: clients\n                });\n            }\n        })\n    }\n\n    _handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    _saveClient = (key, title, index, e) => {\n        if (this.state.clientID === \"\" ||\n            this.state.businessName === \"\" ||\n            this.state.businessEmail === \"\" ||\n            this.state.businessNumber === \"\" ||\n            this.state.contactName === \"\" ||\n            this.state.contactEmail === \"\" ||\n            this.state.contactNumber === \"\") {\n            alert(\"Client information cannot be empty\");\n        } else {\n            const newClientKey = fire\n                .database()\n                .ref(\"clients/\")\n                .push().key;\n\n            fire\n                .database()\n                .ref(\"clients/\")\n                .update({\n                    [newClientKey]: {\n                        listKey: key.key,\n                        businessName: title.title\n                    }\n                });\n\n            this.setState({\n                businessName: \"\",\n                businessEmail: \"\",\n                businessNumber: \"\",\n                contactName: \"\",\n                contactEmail: \"\",\n                contactNumber: \"\"\n            });\n        }\n    };\n\n    _handleDeleteClient = key => {\n        fire\n            .database()\n            .ref(`cards/${key}`)\n            .remove();\n\n        console.log(\"Successfully deleted Client\");\n        const myClientLength = this.state.dataClient.length;\n        // console.log(myCardLength)\n        if (myClientLength === 1) {\n            this.setState({\n                dataClient: []\n            });\n        }\n    };\n\n    toggle = e => {\n        this.setState(prevState => ({\n            editing: !prevState.editing\n        }));\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Form>\n                    <FormGroup>\n                        <h3 for=\"businessName\">Business Name:</h3>\n                        <Input \n                            type=\"text\"\n                            name=\"businessName\"\n                            placeholder=\"Add Name of Business\" \n                            value={this.state.businessName}\n                            onChange={this.state._handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <h3 for=\"businessEmail\">Business Email:</h3>\n                        <Input \n                            type=\"text\" \n                            name=\"businessEmail\"\n                            placeholder=\"Enter Business email\" \n                            value={this.state.businessEmail}\n                            onChange={this.state._handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <h3 for=\"businessNumber\">Business Phone:</h3>\n                        <Input \n                            type=\"text\" \n                            name=\"businessNumber\"\n                            placeholder=\"Enter Business Phone #\" \n                            value={this.state.businessNumber}\n                            onChange={this.state._handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <h3 for=\"contactName\">Contact Name:</h3>\n                        <Input \n                            type=\"text\" \n                            name=\"businessName\"\n                            placeholder=\"Add Name of Contact\" \n                            value={this.state.contactName}\n                            onChange={this.state._handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <h3 for=\"contactEmail\">Contact Email:</h3>\n                        <Input \n                            type=\"text\" \n                            name=\"contactEmail\"\n                            placeholder=\"Enter contact person email\" \n                            value={this.state.contactEmail}\n                            onChange={this.state._handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <h3 for=\"contactNumber\">Contact Phone:</h3>\n                        <Input \n                            type=\"text\" \n                            name=\"contactNumber\"\n                            placeholder=\"Enter Contact Person's Phone #\" \n                            value={this.state.contactNumber}\n                            onChange={this.state._handleChange}\n                        />\n                    </FormGroup>\n                    <Button onClick={() => this._saveClient()}>Save</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default ClientForm;"]},"metadata":{},"sourceType":"module"}