{"ast":null,"code":"var _jsxFileName = \"/Users/grantwatson/Desktop/Development/ReactJS/Watsyn-Jarvis/src/components/Message/Message.js\";\nimport React, { Component } from 'react';\nimport fire from '../Firebase/fire';\nimport { Table } from 'reactstrap';\n\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: []\n    }; // <- set up react state\n  }\n\n  componentWillMount() {\n    /* Create reference to messages in Firebase Database */\n    let messagesRef = fire.database().ref('messages').orderByKey().limitToLast(1000);\n    messagesRef.on('child_added', snapshot => {\n      /* Update React state when message is added at Firebase Database */\n      let message = {\n        text: snapshot.val(),\n        id: snapshot.key\n      };\n      this.setState({\n        messages: [message].concat(this.state.messages)\n      });\n    });\n  }\n\n  addMessage(e) {\n    e.preventDefault(); // <- prevent form submit from reloading the page\n\n    /* Send the message to Firebase */\n\n    fire.database().ref('messages').push(this.inputMessage.value);\n    this.inputMessage.value = ''; // <- clear the input\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"bgf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Add A New Note\")), React.createElement(\"form\", {\n      onSubmit: this.addMessage.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Note Entry\"), React.createElement(\"input\", {\n      ref: el => this.inputMessage = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      class: \"btn btn-success\",\n      type: \"submit\",\n      value: \"Save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Table, {\n      dark: true,\n      responsive: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Actions\"), React.createElement(\"th\", {\n      width: \"90%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Note\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Edit\"),\n    /* Render the list of messages */\n    this.state.messages.map(message => React.createElement(\"td\", {\n      scope: \"row\",\n      key: message.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, message.text))))));\n  }\n\n}\n\nexport default Message;","map":{"version":3,"sources":["/Users/grantwatson/Desktop/Development/ReactJS/Watsyn-Jarvis/src/components/Message/Message.js"],"names":["React","Component","fire","Table","Message","constructor","props","state","messages","componentWillMount","messagesRef","database","ref","orderByKey","limitToLast","on","snapshot","message","text","val","id","key","setState","concat","addMessage","e","preventDefault","push","inputMessage","value","render","bind","el","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport fire from '../Firebase/fire';\nimport { Table } from 'reactstrap';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { messages: [] }; // <- set up react state\n    }\n    componentWillMount() {\n        /* Create reference to messages in Firebase Database */\n        let messagesRef = fire.database().ref('messages').orderByKey().limitToLast(1000);\n        messagesRef.on('child_added', snapshot => {\n            /* Update React state when message is added at Firebase Database */\n            let message = { text: snapshot.val(), id: snapshot.key };\n            this.setState({ messages: [message].concat(this.state.messages) });\n\n\n        })\n    }\n    addMessage(e) {\n        e.preventDefault(); // <- prevent form submit from reloading the page\n        /* Send the message to Firebase */\n        fire.database().ref('messages').push(this.inputMessage.value);\n        this.inputMessage.value = ''; // <- clear the input\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <center><h1 className=\"bgf\">Add A New Note</h1></center>\n                <form onSubmit={this.addMessage.bind(this)}>\n\n                    <h3>Note Entry</h3>\n                    <input ref={el => this.inputMessage = el} />\n                    <br />\n                    <input class=\"btn btn-success\" type=\"submit\" value=\"Save\" />\n\n                </form>\n                <hr />\n                <Table dark responsive hover>\n                    <thead>\n                        <tr>\n                            <th width=\"10%\">Actions</th>\n                            <th width=\"90%\">Note</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Edit</th>\n                            { /* Render the list of messages */\n                                this.state.messages.map(message => <td scope=\"row\" key={message.id}>{message.text}</td>)\n                            }\n                        </tr>\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}